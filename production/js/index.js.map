{"version":3,"sources":["node_modules/browser-pack/_prelude.js","development/js/index.js","development/js/modules/chatting.js","development/js/modules/commands.js","development/js/modules/emotes.js"],"names":[],"mappings":"AAAA;;;;;ACAA;;;;;;AAEA,IAAM,MAAM,GAAG,EAAE,EAAjB;AAEA,IACI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CADf;AAAA,IAEI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,kCAAvB,CAFf;AAAA,IAGI,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,wBAAvB,CAHjB;AAAA,IAII,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,0BAAvB,CAJjB,C,CAMA;;AACA,UAAU,CAAC,gBAAX,CAA4B,OAA5B,EAAqC,UAAC,KAAD,EAAW;AAC5C,EAAA,KAAK,CAAC,cAAN;AAEA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB;AAChB,IAAA,IAAI,EAAE,QAAQ,CAAC,KADC;AAEhB,IAAA,OAAO,EAAE,UAAU,CAAC;AAFJ,GAApB;AAKA,EAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB;AACnB,IAAA,IAAI,EAAE,QAAQ,CAAC,KADI;AAEnB,IAAA,OAAO,EAAE,UAAU,CAAC;AAFD,GAAvB;AAKA,EAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB;AACjB,IAAA,IAAI,EAAE,QAAQ,CAAC,KADE;AAEjB,IAAA,OAAO,EAAE,UAAU,CAAC;AAFH,GAArB;AAKA,EAAA,UAAU,CAAC,KAAX,GAAmB,EAAnB;AACH,CAnBD;AAqBA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB,UAAC,IAAD,EAAU;AACxB,EAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACH,CAFD;AAIA,MAAM,CAAC,EAAP,CAAU,SAAV,EAAqB,UAAC,OAAD,EAAa;AAC9B,EAAA,OAAO,CAAC,OAAR,CAAgB,OAAhB;AACH,CAFD;AAIA,MAAM,CAAC,EAAP,CAAU,OAAV,EAAmB,UAAC,KAAD,EAAW;AAC1B,EAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACH,CAFD,E,CAIA;;AACA,MAAM,CAAC,EAAP,CAAU,MAAV,EAAkB,UAAC,IAAD,EAAU;AACxB,EAAA,OAAO,CAAC,MAAR,CAAe,IAAf;AACH,CAFD,E,CAIA;;AACA,MAAM,CAAC,EAAP,CAAU,OAAV,EAAmB,UAAC,IAAD,EAAU;AACzB,EAAA,OAAO,CAAC,MAAR,CAAe,IAAf;AACH,CAFD;;;;;;;;;;;;;;;AClDA;;AACA;;;;;;AAEA,IACI,aAAa,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CADpB;AAAA,IAEI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CAFf;AAAA,IAGI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,kCAAvB,CAHf;;AAKO,SAAS,IAAT,CAAc,IAAd,EAAoB;AACvB,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AACA,EAAA,cAAc,CAAC,WAAf,aAAgC,IAAI,CAAC,IAArC,eAA8C,IAAI,CAAC,OAAnD;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,MAA3B;;AAEA,MAAI,IAAI,CAAC,IAAL,cAAgB,QAAQ,CAAC,KAAzB,cAAkC,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAlC,CAAJ,EAAiE;AAC7D,IAAA,cAAc,CAAC,SAAf,GAA2B,cAAc,CAAC,SAAf,GAA2B,MAAtD;AACH;;AAED,EAAA,UAAU,CAAC,cAAD,CAAV;AACH;;AAEM,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AACzB,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AACA,EAAA,cAAc,CAAC,WAAf,GAA6B,IAAI,CAAC,OAAlC;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,QAA3B;AACA,EAAA,UAAU,CAAC,cAAD,CAAV;AACH;;AAEM,SAAS,OAAT,CAAiB,OAAjB,EAA0B;AAC7B,MAAI,QAAQ,CAAC,KAAT,CAAe,OAAO,CAAC,OAAvB,CAAJ,EAAqC;AACjC,IAAA,UAAU,CAAC,QAAQ,CAAC,GAAT,CAAa,OAAO,CAAC,OAArB,CAAD,CAAV;AACH,GAFD,MAEO;AACH,IAAA,aAAa,CAAC,SAAD,CAAb;AACH;AACJ;;AAEM,SAAS,KAAT,CAAe,KAAf,EAAsB;AACzB,MAAI,MAAM,CAAC,KAAP,CAAa,KAAK,CAAC,OAAnB,CAAJ,EAAiC;AAC7B,IAAA,UAAU,CAAC,MAAM,CAAC,GAAP,CAAW,KAAX,CAAD,CAAV;AACH,GAFD,MAEO;AACH,IAAA,aAAa,CAAC,OAAD,CAAb;AACH;AACJ,C,CAED;;;AACA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC1B,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AACA,EAAA,cAAc,CAAC,WAAf,kBAAqC,KAArC;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,KAA3B;AACA,EAAA,UAAU,CAAC,cAAD,CAAV;AACH;;AAED,SAAS,UAAT,CAAoB,cAApB,EAAoC;AAChC,MAAI,cAAc,CAAC,MAAf,KAA0B,SAA9B,EAAyC;AACrC,IAAA,aAAa,CAAC,MAAd,CAAqB,cAArB;AACH,GAFD,MAEO;AACH,IAAA,cAAc,CAAC,OAAf,CAAuB,UAAA,OAAO;AAAA,aAAI,aAAa,CAAC,MAAd,CAAqB,OAArB,CAAJ;AAAA,KAA9B;AACH;;AACD,EAAA,cAAc;AACjB;;AAED,SAAS,cAAT,GAA0B;AACtB,EAAA,aAAa,CAAC,SAAd,GAA0B,aAAa,CAAC,YAAd,GAA6B,aAAa,CAAC,YAArE;AACH;;;;;;;;;;AC9DD,IAAM,QAAQ,GAAG,CAAC,WAAD,EAAc,MAAd,EAAsB,SAAtB,EAAiC,QAAjC,EAA2C,OAA3C,CAAjB;;AAEO,SAAS,KAAT,CAAe,OAAf,EAAwB;AAC3B,SAAO,QAAQ,CAAC,IAAT,CAAc,UAAA,OAAO;AAAA,WAAI,OAAO,KAAK,OAAhB;AAAA,GAArB,CAAP;AACH;;AAEM,SAAS,GAAT,CAAa,OAAb,EAAsB;AACzB,MAAI,OAAO,KAAK,WAAhB,EAA6B;AACzB,WAAO,WAAW,EAAlB;AACH;;AAED,MAAI,OAAO,KAAK,MAAhB,EAAwB;AACpB,WAAO,KAAK,CAAC,SAAD,EAAY,KAAZ,CAAZ;AACH;;AAED,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACvB,WAAO,KAAK,CAAC,SAAD,EAAY,QAAZ,CAAZ;AACH;;AAED,MAAI,OAAO,KAAK,QAAhB,EAA0B;AACtB,WAAO,KAAK,CAAC,SAAD,EAAY,OAAZ,CAAZ;AACH;;AAED,MAAI,OAAO,KAAK,OAAhB,EAAyB;AACrB,WAAO,KAAK,CAAC,SAAD,EAAY,MAAZ,CAAZ;AACH;AACJ;;AAED,SAAS,WAAT,GAAuB;AACnB,SAAO,QAAQ,CAAC,GAAT,CAAa,UAAA,OAAO,EAAI;AAC3B,WAAO,aAAa,CAAC,OAAD,CAApB;AACH,GAFM,CAAP;AAGH;;AAED,SAAS,KAAT,CAAe,KAAf,EAAsB,IAAtB,EAA4B;AACxB,EAAA,QAAQ,CAAC,aAAT,CAAuB,YAAvB,EAAqC,YAArC,CAAkD,OAAlD,8BAAgF,KAAhF;AACA,SAAO,aAAa,6BAAsB,IAAtB,EAApB;AACH;;AAED,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC5B,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AACA,EAAA,cAAc,CAAC,WAAf,GAA6B,OAA7B;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,SAA3B;AAEA,SAAO,cAAP;AACH;;;;;;;;;;AC7CD,IAAM,MAAM,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,MAAhC,EAAwC,MAAxC,EAAgD,QAAhD,EAA0D,OAA1D,CAAf;AAEA,IACI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CADf;AAAA,IAEI,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,kCAAvB,CAFf;;AAIO,SAAS,KAAT,CAAe,KAAf,EAAsB;AACzB,SAAO,MAAM,CAAC,IAAP,CAAY,UAAA,MAAM;AAAA,WAAI,KAAK,CAAC,QAAN,CAAe,MAAf,CAAJ;AAAA,GAAlB,CAAP;AACH;;AAEM,SAAS,GAAT,CAAa,KAAb,EAAoB;AACvB,MAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC7B,WAAO,SAAS,EAAhB;AACH;;AAED,MAAI,MAAJ;AACA,EAAA,MAAM,CAAC,OAAP,CAAe,UAAA,QAAQ,EAAI;AACvB,QAAI,KAAK,CAAC,OAAN,CAAc,QAAd,CAAuB,QAAvB,CAAJ,EAAsC;AAClC,UAAM,IAAI,GAAG,QAAQ,CAAC,SAAT,CAAmB,CAAnB,CAAb;AACA,UAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,QAAX,EAAqB,GAArB,CAAd;AAEA,MAAA,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,KAAtB,EAA6B,SAAS,mBAAY,IAAZ,EAAtC,CAAT;AACH;AACJ,GAPD;AASA,MAAM,OAAO,aAAM,KAAK,CAAC,IAAZ,eAAqB,MAArB,CAAb;AACA,SAAO,aAAa,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAApB;AACH;;AAED,SAAS,SAAT,GAAqB;AACjB,SAAO,MAAM,CAAC,GAAP,CAAW,UAAA,KAAK,EAAI;AACvB,WAAO,aAAa,CAAC,KAAD,EAAQ,SAAR,CAApB;AACH,GAFM,CAAP;AAGH,C,CAED;;;AACA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACtB,8BAAoB,KAApB;AACH;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAA6B,OAA7B,EAAsC,KAAtC,EAA6C;AACzC,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAvB;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,OAA3B;AACA,EAAA,cAAc,CAAC,SAAf,GAA2B,KAA3B;;AAEA,MAAI,IAAI,CAAC,IAAL,cAAgB,QAAQ,CAAC,KAAzB,cAAkC,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAlC,CAAJ,EAAiE;AAC7D,IAAA,cAAc,CAAC,SAAf,GAA2B,cAAc,CAAC,SAAf,GAA2B,MAAtD;AACH;;AAED,SAAO,cAAP;AACH","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import * as message from './modules/chatting'\n\nconst socket = io()\n\nconst\n    chatForm = document.querySelector('[send-message]'),\n    chatName = chatForm.querySelector('input[type=\"text\"]:first-of-type'),\n    chatString = chatForm.querySelector('div input[type=\"text\"]'),\n    chatSubmit = chatForm.querySelector('div input[type=\"submit\"]')\n\n// Chatting\nchatSubmit.addEventListener('click', (event) => {\n    event.preventDefault()\n\n    socket.emit('chat', {\n        name: chatName.value,\n        message: chatString.value\n    })\n\n    socket.emit('command', {\n        name: chatName.value,\n        message: chatString.value\n    })\n\n    socket.emit('emote', {\n        name: chatName.value,\n        message: chatString.value\n    })\n\n    chatString.value = ''\n})\n\nsocket.on('chat', (user) => {\n    message.chat(user)\n})\n\nsocket.on('command', (command) => {\n    message.command(command)\n})\n\nsocket.on('emote', (emote) => {\n    message.emote(emote)\n})\n\n// Joining the chat\nsocket.on('join', (data) => {\n    message.server(data)\n})\n\n// Leaving the chat\nsocket.on('leave', (data) => {\n    message.server(data)\n})","import * as commands from './commands'\nimport * as emotes from './emotes'\n\nconst\n    chatContainer = document.querySelector('[chat]'),\n    chatForm = document.querySelector('[send-message]'),\n    chatName = chatForm.querySelector('input[type=\"text\"]:first-of-type')\n\nexport function chat(user) {\n    const messageElement = document.createElement('div')\n    messageElement.textContent = `${user.name}: ${user.message}`\n    messageElement.className = 'user'\n\n    if (user.name == `${chatName.value} ${user.name.split(' ')[1]}`) {\n        messageElement.className = messageElement.className + ' you'\n    }\n\n    addMessage(messageElement)\n}\n\nexport function server(data) {\n    const messageElement = document.createElement('div')\n    messageElement.textContent = data.message\n    messageElement.className = 'server'\n    addMessage(messageElement)\n}\n\nexport function command(command) {\n    if (commands.check(command.message)) {\n        addMessage(commands.run(command.message))\n    } else {\n        fallbackInput('command')\n    }\n}\n\nexport function emote(emote) {\n    if (emotes.check(emote.message)) {\n        addMessage(emotes.run(emote))\n    } else {\n        fallbackInput('emote')\n    }\n}\n\n// Functions I re-use\nfunction fallbackInput(input) {\n    const messageElement = document.createElement('div')\n    messageElement.textContent = `This ${input} is not available!`\n    messageElement.className = input\n    addMessage(messageElement)\n}\n\nfunction addMessage(messageElement) {\n    if (messageElement.length === undefined) {\n        chatContainer.append(messageElement)\n    } else {\n        messageElement.forEach(element => chatContainer.append(element))\n    }\n    scrollToBottom()\n}\n\nfunction scrollToBottom() {\n    chatContainer.scrollTop = chatContainer.scrollHeight - chatContainer.clientHeight;\n}","const commands = ['/commands', '/red', '/yellow', '/green', '/blue']\n\nexport function check(command) {\n    return commands.find(message => message === command)\n}\n\nexport function run(command) {\n    if (command === '/commands') {\n        return allCommands()\n    }\n\n    if (command === '/red') {\n        return color('#E01E5A', 'Red')\n    }\n\n    if (command === '/yellow') {\n        return color('#EBB22E', 'Yellow')\n    }\n\n    if (command === '/green') {\n        return color('#2FB67D', 'Green')\n    }\n\n    if (command === '/blue') {\n        return color('#37C5F0', 'Blue')\n    }\n}\n\nfunction allCommands() {\n    return commands.map(command => {\n        return createMessage(command)\n    })\n}\n\nfunction color(color, name) {\n    document.querySelector('[chatpage]').setAttribute('style', `background-color: ${color}`)\n    return createMessage(`Changed color to: ${name}`)\n}\n\nfunction createMessage(message) {\n    const messageElement = document.createElement('div')\n    messageElement.textContent = message\n    messageElement.className = 'command'\n\n    return messageElement\n}","const emotes = [':emotes', ':happy', ':angry', ':sad', ':cry', ':laugh', ':kiss']\n\nconst\n    chatForm = document.querySelector('[send-message]'),\n    chatName = chatForm.querySelector('input[type=\"text\"]:first-of-type')\n\nexport function check(emote) {\n    return emotes.some(string => emote.includes(string))\n}\n\nexport function run(emote) {\n    if (emote.message === ':emotes') {\n        return allEmotes()\n    }\n\n    let string\n    emotes.forEach(emoticon => {\n        if (emote.message.includes(emoticon)) {\n            const name = emoticon.substring(1)\n            const regex = new RegExp(emoticon, 'g')\n\n            string = emote.message.replace(regex, createImg(`/images/${name}`))\n        }\n    })\n\n    const message = `${emote.name}: ${string}`\n    return createMessage(emote, message, 'user')\n}\n\nfunction allEmotes() {\n    return emotes.map(emote => {\n        return createMessage(emote, 'command')\n    })\n}\n\n// Helper functions\nfunction createImg(emote) {\n    return `<img src=\"${emote}.png\">`\n}\n\nfunction createMessage(user, message, actor) {\n    const messageElement = document.createElement('div')\n    messageElement.innerHTML = message\n    messageElement.className = actor\n\n    if (user.name == `${chatName.value} ${user.name.split(' ')[1]}`) {\n        messageElement.className = messageElement.className + ' you'\n    }\n\n    return messageElement\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}